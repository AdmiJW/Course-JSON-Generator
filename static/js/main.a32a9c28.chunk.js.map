{"version":3,"sources":["logic/utils.js","redux/courseSlice.js","components/Sidelist.js","components/Timeslot.js","components/Section.js","components/CourseEditor.js","App.js","redux/store.js","index.js"],"names":["obtainStateWithoutMeta","state","removeMetaFromObjectInplace","JSON","parse","stringify","object","key","APP_VERSION","downloadJSONFromObject","filename","dataString","encodeURIComponent","anchorElem","document","createElement","setAttribute","click","uploadStateSaveFile","createAsyncThunk","arg","Promise","resolve","reject","pseudoUploader","onchange","file","files","type","fr","FileReader","onload","loadedState","result","meta","app_version","console","warn","window","localStorage","getItem","readAsText","courseSlice","createSlice","name","initialState","nextCourseID","currentSelectedCourse","reducers","setCurrentSelectedCourse","action","courseID","payload","addCourse","newID","id","nextSectionID","code","sections","removeCourse","changeCourseName","changeCourseCode","addSection","nextTimeID","section","lecturer","times","removeSection","sectionID","changeSection","changeLecturer","addTime","dayOfWeek","beginTime","endTime","removeTime","timeID","changeDayOfWeek","Number","changeBeginTime","time","Math","max","changeEndTime","saveDataIntoLocalStorage","setItem","alert","err","error","loadDataFromLocalStorage","Error","message","downloadStateSaveFile","downloadCleanData","extraReducers","builder","addCase","fulfilled","rejected","courseActions","actions","Sidelist","props","isMobileSideListOpen","dispatch","useDispatch","courses","useSelector","courseListJSX","isNaN","course","push","className","onClick","title","Timeslot","value","onChange","e","target","disabled","memo","Section","sectionObj","timeslotListJSX","placeholder","CourseEditor","useState","deleteConfirmation","setDeleteConfirmation","sectionsJSX","setTimeout","App","setIsMobileSideListOpen","store","configureStore","reducer","CourseSliceReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a32a9c28.chunk.js","sourcesContent":["\r\n\r\n/** @typedef {import('../redux/courseSlice').State} State */\r\n\r\n\r\n/**\r\n * This function does two things:\r\n * - Create a copy of the {@link State} object passed in as parameter.\r\n * - Remove all the `meta` tags from the copied {@link State} object\r\n * This is pure function. Parameter is not mutated.\r\n * \r\n * __IMPORTANT: The way to clone object used does not support Dates, functions, undefined, Infinity, \r\n * RegExps, Maps, Sets, Blobs, FileLists, ImageDatas, sparse Arrays, Typed Arrays__\r\n * \r\n * @param {State} state The {@link State} of courseSlice to remove all `meta` properties from.\r\n * @returns {Object} The {@link State} copy with `meta` properties removed.\r\n */\r\nexport function obtainStateWithoutMeta(state) {\r\n    const copy = JSON.parse( JSON.stringify(state) );\r\n    return removeMetaFromObjectInplace(copy);\r\n}\r\n\r\n\r\n/**\r\n * Recursively remove all the `meta` tags from an object. This is specifically used in the\r\n * {@link State} object from courseSlice.js to produce a clean json object representing courses.\r\n * __This is impure function. Parameter are mutated__\r\n * \r\n * __IMPORTANT: The way to clone object used does not support Dates, functions, undefined, Infinity, \r\n * RegExps, Maps, Sets, Blobs, FileLists, ImageDatas, sparse Arrays, Typed Arrays__\r\n * \r\n * @param {State} object The object (Usually {@link State}) of courseSlice to remove all `meta` properties from.\r\n * @returns {Object} The {@link State} with `meta` properties removed. Note that due to implace operation, the original object\r\n *      will be returned\r\n */\r\nfunction removeMetaFromObjectInplace(object) {\r\n    for (let key in object) {\r\n        if (key === 'meta')\r\n            delete object[key];\r\n        else if ( typeof(object[key]) === 'object' )\r\n            removeMetaFromObjectInplace(object[key]);\r\n    }\r\n    return object;\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { obtainStateWithoutMeta } from \"../logic/utils\";\r\n\r\n\r\n// Slice Structure:\r\n/*\r\n{\r\n    meta: { \r\n        nextCourseID: \r\n        app_version:\r\n    }\r\n    currentSelectedCourse:\r\n    id: {\r\n        meta: {\r\n            nextSectionID:\r\n        }\r\n        id:\r\n        name:\r\n        code:\r\n        sections: {\r\n            id: {\r\n                meta: {\r\n                    nextTimeID: \r\n                }\r\n                section:\r\n                lecturer:\r\n                times: {\r\n                    id: {\r\n                        id:\r\n                        dayOfWeek:\r\n                        beginTime:\r\n                        endTime:\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\n\r\n\r\n/**\r\n * Single Time object\r\n * @typedef {Object} Time\r\n * @property {number} id\r\n * @property {number} dayOfWeek\r\n * @property {number} beginTime\r\n * @property {number} endTime\r\n */\r\n\r\n/**\r\n * Single Section object\r\n * @typedef {Object} Section\r\n * @property {{ nextTimeID }} meta\r\n * @property {number} id\r\n * @property {string} section\r\n * @property {string} lecturer\r\n * @property {Object.<number, Time>} times\r\n */\r\n\r\n/**\r\n * Single Course object\r\n * @typedef {Object} Course\r\n * @property {{ nextSectionID }} meta\r\n * @property {number} id\r\n * @property {string} name\r\n * @property {string} code\r\n * @property {Object.<number, Section>} sections\r\n */\r\n\r\n/**\r\n * State\r\n * @typedef State\r\n * @type {Object.<number, Course>}\r\n * @property {{ nextTimeID, app_version }} meta\r\n * @property {number} currentSelectedCourse id of course selected\r\n */\r\n\r\n\r\nconst APP_VERSION = '1.0.0';    // ! Used to keep track of saved file from outdated application\r\n\r\n\r\n\r\n//=======================================\r\n// Utilities\r\n//=======================================\r\nconst generateEmptyCourse = (id)=> {\r\n    return {\r\n        id,\r\n        meta: {\r\n            nextSectionID: 0,\r\n        },\r\n        name: \"Untitled Course\",\r\n        code: \"\",\r\n        sections: {}\r\n    };\r\n}\r\n\r\nconst generateEmptySection = (id)=> {\r\n    return {\r\n        id,\r\n        meta: {\r\n            nextTimeID: 0\r\n        },\r\n        section: \"\",\r\n        lecturer: \"\",\r\n        times: {}\r\n    }\r\n}\r\n\r\nconst generateEmptyTime = (id)=> {\r\n    return {\r\n        id,\r\n        dayOfWeek: 0,\r\n        beginTime: 8,\r\n        endTime: 9\r\n    }\r\n}\r\n\r\n\r\nfunction downloadJSONFromObject(object, filename) {\r\n    const dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(object, null, 4));\r\n    const anchorElem = document.createElement('a');\r\n    anchorElem.setAttribute('href', dataString);\r\n    anchorElem.setAttribute('download', filename);\r\n    anchorElem.click();\r\n}\r\n\r\n//=======================================\r\n// Thunk\r\n//=======================================\r\nconst uploadStateSaveFile = createAsyncThunk(\r\n    'courses/uploadStateSaveFile',\r\n    (arg)=> new Promise((resolve, reject)=> {\r\n        // Simulate a click from <input type='file'>\r\n        const pseudoUploader = document.createElement('input');\r\n        pseudoUploader.setAttribute('type', 'file');\r\n        pseudoUploader.setAttribute('accept', '.json');\r\n\r\n        pseudoUploader.onchange = ()=> {\r\n            const file = pseudoUploader.files[0];\r\n            // Uploaded a non-json file or some other problems that the file is not registered.\r\n            if (!file || file.type !== 'application/json')\r\n                return reject(\"Unable to read save file. Make sure you uploaded the very same save file in .json format\");\r\n\r\n            // Read as text and parse to JSON\r\n            const fr = new FileReader();\r\n            fr.onload = ()=> {\r\n                const loadedState = JSON.parse(fr.result);\r\n\r\n                // Something is wrong with this json. We do not perform 100% check against schema, but this is least \r\n                // we could do.\r\n                if (!loadedState || !loadedState.meta)\r\n                    return reject(\"Corrupted/Incorrect save file. Failed to read save file\");\r\n                \r\n                // Application version mismatch. Warn\r\n                if (loadedState.meta.app_version !== APP_VERSION) \r\n                    console.warn(\"Saved data is from older version of application! Old version: \",\r\n                                window.localStorage.getItem('app_version'));\r\n                \r\n                // Resolve the promise with loadedState\r\n                resolve(loadedState);\r\n            }\r\n            \r\n            fr.readAsText(file);\r\n        };\r\n        pseudoUploader.click();\r\n    })\r\n);\r\n\r\n\r\n\r\n//=======================================\r\n// Slice\r\n//=======================================\r\nconst courseSlice = createSlice({\r\n    name: 'courses',\r\n\r\n    /** @type State */\r\n    initialState: {\r\n        meta: {\r\n            nextCourseID: 0,\r\n            app_version: APP_VERSION,\r\n            currentSelectedCourse: null\r\n        },\r\n    },\r\n\r\n    reducers: {\r\n        setCurrentSelectedCourse: (state, action)=> {\r\n            const { courseID } = action.payload;\r\n            state.meta.currentSelectedCourse = courseID;\r\n        },\r\n        addCourse: (state)=> {\r\n            const newID = state.meta.nextCourseID++;\r\n            state[newID] = generateEmptyCourse(newID);\r\n            state.meta.currentSelectedCourse = newID;\r\n        },\r\n        removeCourse: (state, action)=> {\r\n            const { courseID } = action.payload;\r\n            delete state[courseID];\r\n            state.meta.currentSelectedCourse = null;\r\n        },\r\n        changeCourseName: (state, action)=> {\r\n            const { courseID, name } = action.payload;\r\n            state[courseID].name = name;\r\n        },\r\n        changeCourseCode: (state, action)=> {\r\n            const { courseID, code } = action.payload;\r\n            state[courseID].code = code;\r\n        },\r\n        addSection: (state, action)=> {\r\n            const { courseID } = action.payload;\r\n            const newID = state[courseID].meta.nextSectionID++;\r\n            state[courseID].sections[newID] = generateEmptySection(newID);\r\n        },\r\n        removeSection: (state, action)=> {\r\n            const { courseID, sectionID } = action.payload;\r\n            delete state[courseID].sections[sectionID];\r\n        },\r\n        changeSection: (state, action)=> {\r\n            const { courseID, sectionID, section } = action.payload;\r\n            state[courseID].sections[sectionID].section = section;\r\n        },\r\n        changeLecturer: (state, action)=> {\r\n            const { courseID, sectionID, lecturer } = action.payload;\r\n            state[courseID].sections[sectionID].lecturer = lecturer;\r\n        },\r\n        addTime: (state, action)=> {\r\n            const { courseID, sectionID } = action.payload;\r\n            const newID = state[courseID].sections[sectionID].meta.nextTimeID++;\r\n            state[courseID].sections[sectionID].times[newID] = generateEmptyTime(newID);\r\n        },\r\n        removeTime: (state, action)=> {\r\n            const { courseID, sectionID, timeID } = action.payload;\r\n            delete state[courseID].sections[sectionID].times[timeID];\r\n        },\r\n        changeDayOfWeek: (state, action)=> {\r\n            const { courseID, sectionID, timeID, dayOfWeek } = action.payload;\r\n            state[courseID].sections[sectionID].times[timeID].dayOfWeek = Number(dayOfWeek);\r\n        },\r\n        changeBeginTime: (state, action)=> {\r\n            const { courseID, sectionID, timeID, beginTime } = action.payload;\r\n            const time = state[courseID].sections[sectionID].times[timeID];\r\n            time.beginTime = Number(beginTime);\r\n            time.endTime = Math.max( Number(beginTime) + 1, time.endTime );\r\n        },\r\n        changeEndTime: (state, action)=> {\r\n            const { courseID, sectionID, timeID, endTime } = action.payload;\r\n            state[courseID].sections[sectionID].times[timeID].endTime = Number(endTime);\r\n        },\r\n\r\n\r\n        // Data Related Operations\r\n        saveDataIntoLocalStorage: (state)=> {\r\n            try {\r\n                window.localStorage.setItem('app_version', state.meta.app_version);\r\n                window.localStorage.setItem('saved_state', JSON.stringify(state) );\r\n                window.alert('Successfully saved state to local storage');\r\n            } catch (err) {\r\n                window.alert('Error while saving to local storage. See console for more info');\r\n                console.error(err);\r\n            }\r\n        },\r\n        loadDataFromLocalStorage: (state)=> {\r\n            try {\r\n                if (window.localStorage.getItem('saved_state') === null)\r\n                    throw new Error('no-save');\r\n\r\n                if (window.localStorage.getItem('app_version') !== APP_VERSION)\r\n                    console.warn(\"Saved data is from older version of application! Old version: \",\r\n                                  window.localStorage.getItem('app_version'));\r\n                                \r\n                window.alert('Successfully loaded previous state from local storage');\r\n                return JSON.parse(window.localStorage.getItem('saved_state'));\r\n            } catch (err) {\r\n                if (err.message === 'no-save') {\r\n                    window.alert('No previous save file found');\r\n                } else {\r\n                    window.alert('Error while saving to local storage. See console for more info');\r\n                }\r\n                console.error(err);\r\n            }\r\n        },\r\n        downloadStateSaveFile: (state)=> {\r\n            downloadJSONFromObject(state, 'save.json');\r\n        },\r\n        downloadCleanData: (state)=> {\r\n            const stateCopy = obtainStateWithoutMeta(state);\r\n            downloadJSONFromObject(stateCopy, 'courses.json');\r\n        },\r\n    },\r\n\r\n    // Extra reducers from Async thunk\r\n    extraReducers: (builder)=> {\r\n        builder.addCase(uploadStateSaveFile.fulfilled, (state, action)=> {\r\n            window.alert('Successfully loaded state from file');\r\n            return action.payload;\r\n        });\r\n        builder.addCase(uploadStateSaveFile.rejected, (state, action)=> {\r\n            window.alert(action.error.message);\r\n        });\r\n    }\r\n});\r\n\r\nexport const courseActions = { ...courseSlice.actions, uploadStateSaveFile };\r\nexport default courseSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { courseActions } from '../redux/courseSlice';\r\n\r\nfunction Sidelist(props) {\r\n\r\n    const { isMobileSideListOpen } = props;\r\n    const dispatch = useDispatch();\r\n    const courses = useSelector((state)=> state.courses);\r\n\r\n    const courseListJSX = [];\r\n    for (let key in courses) {\r\n        if (isNaN(key)) continue;\r\n\r\n        const course = courses[key];\r\n        courseListJSX.push(\r\n            <li className={`sidelist--item ${course.id === courses.meta.currentSelectedCourse? 'sidelist--item--selected': ''}`} \r\n                key={course.id} \r\n                onClick={()=> dispatch(courseActions.setCurrentSelectedCourse({ courseID: course.id })) }>\r\n                    <p className='sidelist--name'>{ course.name }</p>\r\n                    <p className='sidelist--code'>{ course.code }</p>\r\n            </li>  \r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <div className={`sidelist ${isMobileSideListOpen? 'show': ''}`}>\r\n        <ul className='sidelist-list' >\r\n            { courseListJSX }\r\n        </ul>\r\n        \r\n        <button className='sidelist--add' aria-label='Add blank course' title='Add blank course' onClick={()=> dispatch(courseActions.addCourse())}>\r\n            +\r\n        </button>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Sidelist;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { courseActions } from '../redux/courseSlice';\r\n\r\nfunction Timeslot(props) {\r\n    const { courseID, sectionID, time } = props;\r\n    const { id: timeID, dayOfWeek, beginTime, endTime } = time;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <li className='time'>\r\n\r\n        <select className='time--dayofweek' value={dayOfWeek}\r\n            onChange={(e)=> dispatch(courseActions.changeDayOfWeek({ courseID, sectionID, timeID, dayOfWeek: e.target.value }))}>\r\n                <option value='0'>Sunday</option>\r\n                <option value='1'>Monday</option>\r\n                <option value='2'>Tuesday</option>\r\n                <option value='3'>Wednesday</option>\r\n                <option value='4'>Thursday</option>\r\n                <option value='5'>Friday</option>\r\n                <option value='6'>Saturday</option>\r\n        </select>\r\n\r\n        <select className='time--beginTime' value={beginTime}\r\n            onChange={(e)=> dispatch(courseActions.changeBeginTime({ courseID, sectionID, timeID, beginTime: e.target.value }))}>\r\n                <option value='8'>(02) 8.00 AM</option>\r\n                <option value='9'>(03) 9.00 AM</option>\r\n                <option value='10'>(04) 10.00 AM</option>\r\n                <option value='11'>(05) 11.00 AM</option>\r\n                <option value='12'>(06) 12.00 PM</option>\r\n                <option value='13'>(07) 1.00 PM</option>\r\n                <option value='14'>(08) 2.00 PM</option>\r\n                <option value='15'>(09) 3.00 PM</option>\r\n                <option value='16'>(10) 4.00 PM</option>\r\n                <option value='17'>(11) 5.00 PM</option>\r\n        </select>\r\n\r\n        <p>To</p>\r\n\r\n        <select className='time--endTime' value={endTime}\r\n            onChange={(e)=> dispatch(courseActions.changeEndTime({ courseID, sectionID, timeID, endTime: e.target.value }))}>\r\n                <option value='9' disabled={ beginTime > 9 }>(03) 9.00 AM</option>\r\n                <option value='10' disabled={ beginTime > 10 }>(04) 10.00 AM</option>\r\n                <option value='11' disabled={ beginTime > 11 }>(05) 11.00 AM</option>\r\n                <option value='12' disabled={ beginTime > 12 }>(06) 12.00 PM</option>\r\n                <option value='13' disabled={ beginTime > 13 }>(07) 1.00 PM</option>\r\n                <option value='14' disabled={ beginTime > 14 }>(08) 2.00 PM</option>\r\n                <option value='15' disabled={ beginTime > 15 }>(09) 3.00 PM</option>\r\n                <option value='16' disabled={ beginTime > 16 }>(10) 4.00 PM</option>\r\n                <option value='17' disabled={ beginTime > 17 }>(11) 5.00 PM</option>\r\n                <option value='18' disabled={ beginTime > 18 }>(11) 6.00 PM</option>\r\n        </select>\r\n\r\n        <button type='button' className='time--delete'\r\n            onClick={(e)=> dispatch(courseActions.removeTime({ courseID, sectionID, timeID }))}>\r\n                Remove\r\n        </button>\r\n    </li>\r\n    );  \r\n}\r\n\r\nexport default memo(Timeslot);","import { memo } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { courseActions } from \"../redux/courseSlice\";\r\n\r\n\r\nimport Timeslot from './Timeslot';\r\n\r\n\r\nfunction Section(props) {\r\n\r\n    const { courseID, section: sectionObj } = props;\r\n    const { id: sectionID, section, lecturer, times } = sectionObj;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const timeslotListJSX = [];\r\n    for (let key in times) {\r\n        if (isNaN(key)) continue;\r\n\r\n        const time = times[key];\r\n        timeslotListJSX.push(\r\n            <Timeslot key={time.id} courseID={courseID} sectionID={sectionID} time={time} />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <li className='section'>\r\n\r\n        <div className='section--meta'>\r\n            <input type='text' className='section--section' value={ section } placeholder='Section'\r\n                onChange={(e)=> dispatch(courseActions.changeSection({ courseID, sectionID, section: e.target.value }))} />\r\n            <input type='text' className='section--lecturer' value={ lecturer } placeholder='Lecturer Name'\r\n                onChange={(e)=> dispatch(courseActions.changeLecturer({ courseID, sectionID, section: e.target.value }))} />\r\n        </div>\r\n\r\n        <div className='section--btngrp'>\r\n            <button type='button' className='section--addtime'\r\n                onClick={(e)=> dispatch(courseActions.addTime({ courseID, sectionID }))} >\r\n                    Add Time\r\n            </button>\r\n            <button type='button' className='section--delete'\r\n                onClick={(e)=> dispatch(courseActions.removeSection({ courseID, sectionID }))} >\r\n                    Delete Section\r\n            </button>\r\n        </div>\r\n\r\n        <ul className='section--times'>\r\n            { timeslotListJSX }\r\n        </ul>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default memo(Section);","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { courseActions } from '../redux/courseSlice';\r\n\r\n/** @typedef {import('../redux/courseSlice').State} State */\r\n\r\nimport Section from './Section';\r\n\r\n\r\nfunction CourseEditor() {\r\n    /** @type State */\r\n    const courses = useSelector((state)=> state.courses);\r\n    const dispatch = useDispatch();\r\n    const [ deleteConfirmation, setDeleteConfirmation ] = useState(false);\r\n\r\n\r\n    // No selection - Return empty section\r\n    if (courses.meta.currentSelectedCourse === null) {\r\n        return <section className='editor'></section>;\r\n    }\r\n\r\n    const courseID = courses.meta.currentSelectedCourse;\r\n    const course = courses[courseID];\r\n    const { name, code, sections } = course;\r\n\r\n    \r\n    const sectionsJSX = [];\r\n    for (let key in sections) {\r\n        if (isNaN(key)) continue;\r\n\r\n        const section = sections[key];\r\n        sectionsJSX.push(\r\n            <Section key={section.id} courseID={courseID} section={section} />\r\n        );\r\n    }\r\n\r\n    const onDelete = ()=> {\r\n        if (deleteConfirmation === false) {\r\n            setDeleteConfirmation(true);\r\n            setTimeout(() => {\r\n                setDeleteConfirmation(false);\r\n            }, 3000);\r\n        }\r\n        else {\r\n            dispatch(courseActions.removeCourse({ courseID }));\r\n            setDeleteConfirmation(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n    <section className='editor'>\r\n        {/* Course Name & Course Code */}\r\n        <input type='text' className='editor__coursename' value={name} placeholder='Course Name'\r\n            onChange={(e)=> dispatch(courseActions.changeCourseName({ courseID, name: e.target.value})) } />\r\n        <input type='text' className='editor__coursecode' value={code} placeholder='Course Code'\r\n            onChange={(e)=> dispatch(courseActions.changeCourseCode({ courseID, code: e.target.value})) } />\r\n        \r\n        {/* Button Group */}\r\n        <div className='editor__btngrp'>\r\n            <button type='button' className='editor__addsection'\r\n                onClick={()=> dispatch(courseActions.addSection({ courseID })) } >\r\n                    Add Section\r\n            </button>\r\n            <button type='button' className={`editor__removecourse ${deleteConfirmation? 'warn': ''}`}\r\n                onClick={ onDelete } >\r\n                    {`${deleteConfirmation? 'Confirm Delete?': 'Delete'}`}\r\n            </button>\r\n        </div>\r\n\r\n        {/* Sections */}\r\n        <ul className='sections'>\r\n            { sectionsJSX }\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default CourseEditor;","import { Fragment, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { courseActions } from \"./redux/courseSlice\";\n\nimport Sidelist from \"./components/Sidelist\";\nimport CourseEditor from \"./components/CourseEditor\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    const [isMobileSideListOpen, setIsMobileSideListOpen] = useState(false);\n\n\n    return (\n    <Fragment>\n    <main>\n        <Sidelist isMobileSideListOpen={isMobileSideListOpen} />\n        <CourseEditor />\n    </main>\n\n\n    <div className='controls--btngrp'>\n        <button type='button' className='controls--btn controls--save' aria-label='Save into Local Storage' title='Save into Local Storage'\n            onClick={()=> dispatch(courseActions.saveDataIntoLocalStorage())} >\n                <i className=\"far fa-save\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--load' aria-label='Load from Local Storage' title='Load from Local Storage'\n            onClick={()=> dispatch(courseActions.loadDataFromLocalStorage())} >\n                <i className=\"fas fa-database\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--savefile' aria-label='Load state from file' title='Load state from file'\n            onClick={()=> dispatch(courseActions.uploadStateSaveFile()) } >\n                <i className=\"fas fa-file-import\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--loadfile' aria-label='Save state as file' title='Save state as file'\n            onClick={()=> dispatch(courseActions.downloadStateSaveFile()) } >\n                <i className=\"fas fa-file-export\"></i>\n        </button>\n\n        <button type='button' className='controls--btn controls--download' aria-label='Download' title='Download'\n            onClick={()=> dispatch(courseActions.downloadCleanData())}>\n                <i className=\"fas fa-file-download\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--mobileview' aria-label='List' title='List' \n            onClick={()=> setIsMobileSideListOpen(!isMobileSideListOpen)} >\n                <i className=\"fas fa-list-ul\"></i>\n        </button>\n    </div>\n    </Fragment>\n\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport CourseSliceReducer from \"./courseSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        courses: CourseSliceReducer\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}