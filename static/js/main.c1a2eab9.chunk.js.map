{"version":3,"sources":["logic/utils.js","logic/addcourseCommnd.js","redux/courseSlice.js","components/Sidelist.js","components/Timeslot.js","components/Section.js","components/CourseEditor.js","App.js","redux/store.js","index.js"],"names":["obtainStateWithoutMeta","state","removeMetaFromObjectInplace","JSON","parse","stringify","object","key","generateEmptyCourse","id","meta","nextSectionID","name","code","sections","generateEmptySection","nextTimeID","section","lecturer","times","generateEmptyTime","dayOfWeek","beginTime","endTime","downloadJSONFromObject","filename","dataString","encodeURIComponent","anchorElem","document","createElement","setAttribute","click","dayOfWeekMapper","timeMapper","addCourseCommandHandler","tokens","courseID","length","error","courseName","shift","courseCode","n_sections","Number","isNaN","course","i","res","addSectionCommandHandler","payload","ok","sectionID","check","sectionNo","lecturerName","n_times","addTimeCommandHandler","timeID","undefined","time","APP_VERSION","uploadStateSaveFile","createAsyncThunk","arg","Promise","resolve","reject","pseudoUploader","onchange","file","files","type","fr","FileReader","onload","loadedState","result","app_version","console","warn","window","localStorage","getItem","readAsText","courseSlice","createSlice","initialState","nextCourseID","currentSelectedCourse","reducers","setCurrentSelectedCourse","action","addCourse","newID","removeCourse","changeCourseName","changeCourseCode","addSection","removeSection","changeSection","changeLecturer","addTime","removeTime","changeDayOfWeek","changeBeginTime","Math","max","changeEndTime","saveDataIntoLocalStorage","setItem","alert","err","loadDataFromLocalStorage","Error","message","downloadStateSaveFile","downloadCleanData","executeCommand","fullCommand","stateProxy","split","map","e","trim","command","n_courses","parseCommand","extraReducers","builder","addCase","fulfilled","rejected","courseActions","actions","Sidelist","props","isMobileSideListOpen","dispatch","useDispatch","courses","useSelector","courseListJSX","push","className","onClick","title","href","target","rel","Timeslot","value","onChange","disabled","memo","Section","sectionObj","timeslotListJSX","placeholder","CourseEditor","useState","deleteConfirmation","setDeleteConfirmation","sectionsJSX","setTimeout","App","setIsMobileSideListOpen","commandField","setCommandField","onKeyDown","store","configureStore","reducer","CourseSliceReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1a2eab9.chunk.js","sourcesContent":["\r\n\r\n/** @typedef {import('../redux/courseSlice').State} State */\r\n\r\n\r\n/**\r\n * This function does two things:\r\n * - Create a copy of the {@link State} object passed in as parameter.\r\n * - Remove all the `meta` tags from the copied {@link State} object\r\n * This is pure function. Parameter is not mutated.\r\n * \r\n * __IMPORTANT: The way to clone object used does not support Dates, functions, undefined, Infinity, \r\n * RegExps, Maps, Sets, Blobs, FileLists, ImageDatas, sparse Arrays, Typed Arrays__\r\n * \r\n * @param {State} state The {@link State} of courseSlice to remove all `meta` properties from.\r\n * @returns {Object} The {@link State} copy with `meta` properties removed.\r\n */\r\nexport function obtainStateWithoutMeta(state) {\r\n    const copy = JSON.parse( JSON.stringify(state) );\r\n    return removeMetaFromObjectInplace(copy);\r\n}\r\n\r\n\r\n/**\r\n * Recursively remove all the `meta` tags from an object. This is specifically used in the\r\n * {@link State} object from courseSlice.js to produce a clean json object representing courses.\r\n * __This is impure function. Parameter are mutated__\r\n * \r\n * __IMPORTANT: The way to clone object used does not support Dates, functions, undefined, Infinity, \r\n * RegExps, Maps, Sets, Blobs, FileLists, ImageDatas, sparse Arrays, Typed Arrays__\r\n * \r\n * @param {State} object The object (Usually {@link State}) of courseSlice to remove all `meta` properties from.\r\n * @returns {Object} The {@link State} with `meta` properties removed. Note that due to implace operation, the original object\r\n *      will be returned\r\n */\r\nfunction removeMetaFromObjectInplace(object) {\r\n    for (let key in object) {\r\n        if (key === 'meta')\r\n            delete object[key];\r\n        else if ( typeof(object[key]) === 'object' )\r\n            removeMetaFromObjectInplace(object[key]);\r\n    }\r\n    return object;\r\n}\r\n\r\n\r\n\r\n\r\nexport const generateEmptyCourse = (id)=> {\r\n    return {\r\n        id,\r\n        meta: {\r\n            nextSectionID: 0,\r\n        },\r\n        name: \"Untitled Course\",\r\n        code: \"\",\r\n        sections: {}\r\n    };\r\n}\r\n\r\nexport const generateEmptySection = (id)=> {\r\n    return {\r\n        id,\r\n        meta: {\r\n            nextTimeID: 0\r\n        },\r\n        section: \"\",\r\n        lecturer: \"\",\r\n        times: {}\r\n    }\r\n}\r\n\r\nexport const generateEmptyTime = (id)=> {\r\n    return {\r\n        id,\r\n        dayOfWeek: 0,\r\n        beginTime: 8,\r\n        endTime: 9\r\n    }\r\n}\r\n\r\n\r\nexport function downloadJSONFromObject(object, filename) {\r\n    const dataString = 'data:text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(object, null, 4));\r\n    const anchorElem = document.createElement('a');\r\n    anchorElem.setAttribute('href', dataString);\r\n    anchorElem.setAttribute('download', filename);\r\n    anchorElem.click();\r\n}","import { generateEmptyCourse, generateEmptySection, generateEmptyTime } from './utils';\r\n\r\n\r\n// Maps valid dayOfWeek token to the unified value\r\nconst dayOfWeekMapper = {\r\n    \"SUN\": 0, \"MON\": 1, \"TUE\": 2, \"WED\": 3, \"THU\": 4, \"FRI\": 5, \"SAT\": 6,\r\n    0:0, 1:1, 2:2, 3:3, 4:4, 5:5, 6:6\r\n};\r\nconst timeMapper = {\r\n    0:0, 1:1, 2:2, 3:3, 4:4, 5:5, 6:6, 7:7, 8:8, 9:9, 10:10, 11:11, 12:12, \r\n    13:13, 14:14, 15:15, 16:16, 17:17, 18:18, 19:19, 20:20, 21:21, 22:22, 23:23,\r\n    \"02\":8, \"03\":9, \"04\":10, \"05\":11, \"06\":12, \"07\":13, \"08\":14, \"09\":15, \"010\":16, \"011\":17, \"012\":18, \"013\":19, \"014\":20,\r\n    \"12AM\":0, \"1AM\":1, \"2AM\":2, \"3AM\":3, \"4AM\":4, \"5AM\":5, \"6AM\":6, \"7AM\":7, \"8AM\":8, \"9AM\":9, \"10AM\":10, \"11AM\":11, \r\n    \"12PM\": 12, \"1PM\":13, \"2PM\":14, \"3PM\":15, \"4PM\":16, \"5PM\":17, \"6PM\":18, \"7PM\":19, \"8PM\":20, \"9PM\":21, \"10PM\":22, \"11PM\":23\r\n};\r\n\r\n\r\n\r\nexport function addCourseCommandHandler(tokens, courseID) {\r\n    if (tokens.length < 3) return { error: `Error in parsing Course (ID: ${courseID}). Expected 3 tokens: courseName, courseCode, n_sections`};\r\n    const courseName = tokens.shift();\r\n    const courseCode = tokens.shift();\r\n    const n_sections = Number(tokens.shift() );\r\n\r\n    if (isNaN(n_sections) || n_sections < 0) \r\n        return { error: `Error in parsing Course (ID: ${courseID}). n_sections should be a valid integer greater than 0`};\r\n\r\n    const course = generateEmptyCourse(courseID);\r\n    course.name = courseName;\r\n    course.code = courseCode;\r\n    course.meta.nextSectionID = n_sections;\r\n    for (let i = 0; i < n_sections; ++i) {\r\n        const res = addSectionCommandHandler(tokens, i);\r\n        if (res.error) return res;\r\n        course.sections[i] = res.payload;\r\n    }\r\n    return { ok: true, payload: course };\r\n}\r\n\r\nfunction addSectionCommandHandler(tokens, sectionID) {\r\n    if (tokens.length < 4) return { error: `Error in parsing Section (ID: ${sectionID}). Expected 4 tokens: 'S', sectionNo, lecturerName, n_times`};\r\n    const check = tokens.shift();\r\n    if (check !== 'S') return { error: `Error in parsing Section (ID: ${sectionID}). Expected token 'S', got ${check} instead`};\r\n    const sectionNo = tokens.shift();\r\n    const lecturerName = tokens.shift();\r\n    const n_times = Number(tokens.shift() );\r\n\r\n    if (isNaN(n_times) || n_times < 0) \r\n        return { error: `Error in parsing Section (ID: ${sectionID}). n_times should be a valid integer greater than 0`};\r\n\r\n    const section = generateEmptySection(sectionID);\r\n    section.section = sectionNo;\r\n    section.lecturer = lecturerName;\r\n    section.meta.nextTimeID = n_times;\r\n    for (let i = 0; i < n_times; ++i) {\r\n        const res = addTimeCommandHandler(tokens, i);\r\n        if (res.error) return res;\r\n        section.times[i] = res.payload;\r\n    }\r\n    return { ok: true, payload: section };\r\n}\r\n\r\n\r\nfunction addTimeCommandHandler(tokens, timeID) {\r\n    if (tokens.length < 4) return { error: `Error in parsing Time (ID: ${timeID}). Expected 4 tokens: 'T', dayOfWeek, beginTime, endTime`};\r\n    const check = tokens.shift();\r\n    if (check !== 'T') return { error: `Error in parsing Time (ID: ${timeID}). Expected token 'T', got ${check} instead`};\r\n    const dayOfWeek = dayOfWeekMapper[ tokens.shift() ];\r\n    const beginTime = timeMapper[ tokens.shift() ];\r\n    const endTime = timeMapper[ tokens.shift() ];\r\n\r\n    // Check Ranges\r\n    if ( dayOfWeek === undefined )\r\n        return { error: `Error in parsing Time (ID: ${timeID}). dayOfWeek argument should be integer in [0-7] or shortforms` +\r\n                        ` like \"SUN\", \"THU\".... Got ${dayOfWeek} instead`};\r\n    if ( beginTime === undefined )\r\n        return { error: `Error in parsing Time (ID: ${timeID}). beginTime argument should be integer in [0-23] or 12 hour format \"12AM\" (case sensitive). ` + \r\n                        `Got ${beginTime} instead`};\r\n    if ( endTime === undefined )\r\n        return { error: `Error in parsing Time (ID: ${timeID}). endTime argument should be integer in [0-23] or 12 hour format \"12AM\". (case sensitive). ` + \r\n                        `Got ${endTime} instead`};\r\n\r\n    const time = generateEmptyTime(timeID);\r\n    time.dayOfWeek = dayOfWeek;\r\n    time.beginTime = beginTime;\r\n    time.endTime = endTime;\r\n    return { ok: true, payload: time };\r\n}","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { \r\n    obtainStateWithoutMeta, generateEmptyCourse, generateEmptySection, generateEmptyTime, \r\n    downloadJSONFromObject \r\n} from \"../logic/utils\";\r\nimport { addCourseCommandHandler } from \"../logic/addcourseCommnd\";\r\n\r\n\r\n// Slice Structure:\r\n/*\r\n{\r\n    meta: { \r\n        nextCourseID: \r\n        app_version:\r\n    }\r\n    currentSelectedCourse:\r\n    id: {\r\n        meta: {\r\n            nextSectionID:\r\n        }\r\n        id:\r\n        name:\r\n        code:\r\n        sections: {\r\n            id: {\r\n                meta: {\r\n                    nextTimeID: \r\n                }\r\n                section:\r\n                lecturer:\r\n                times: {\r\n                    id: {\r\n                        id:\r\n                        dayOfWeek:\r\n                        beginTime:\r\n                        endTime:\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\n\r\n\r\n/**\r\n * Single Time object\r\n * @typedef {Object} Time\r\n * @property {number} id\r\n * @property {number} dayOfWeek\r\n * @property {number} beginTime\r\n * @property {number} endTime\r\n */\r\n\r\n/**\r\n * Single Section object\r\n * @typedef {Object} Section\r\n * @property {{ nextTimeID }} meta\r\n * @property {number} id\r\n * @property {string} section\r\n * @property {string} lecturer\r\n * @property {Object.<number, Time>} times\r\n */\r\n\r\n/**\r\n * Single Course object\r\n * @typedef {Object} Course\r\n * @property {{ nextSectionID }} meta\r\n * @property {number} id\r\n * @property {string} name\r\n * @property {string} code\r\n * @property {Object.<number, Section>} sections\r\n */\r\n\r\n/**\r\n * State\r\n * @typedef State\r\n * @type {Object.<number, Course>}\r\n * @property {{ nextTimeID, app_version }} meta\r\n * @property {number} currentSelectedCourse id of course selected\r\n */\r\n\r\n\r\nconst APP_VERSION = '1.0.0';    // ! Used to keep track of saved file from outdated application\r\n\r\n\r\n\r\n//=======================================\r\n// Commands\r\n//=======================================\r\n// Command handlers that are executed correctly returns an object with property `ok` - { ok: true ...}\r\n// Command handlers that are invalid will return object with property error - { error: 'Invalid command' }\r\n// Command handlers can return some result by including as payload - { ok: true, payload: {...} }\r\n\r\n// stateProxy is the proxy state given by redux toolkit from immer library to allow for mutations of state\r\nfunction parseCommand(fullCommand, stateProxy) {\r\n    if (fullCommand.length === 0) return {};\r\n\r\n    // Split by delimiter semicolon ;, then remove leading and trailing whitespaces\r\n    // This effectively removes \\t and \\n and unwanted spaces in the command.\r\n    const tokens = fullCommand.split(';').map((e)=> e.trim());\r\n\r\n    const command = tokens.shift();\r\n    if (command === 'addcourse') {\r\n        const courseID = stateProxy.meta.nextCourseID;\r\n        const res = addCourseCommandHandler(tokens, courseID);\r\n\r\n        if (res.error)\r\n            return window.alert(res.error);\r\n\r\n        stateProxy[courseID] = res.payload;\r\n        stateProxy.meta.nextCourseID++;\r\n        window.alert(\"Course successfully added.\");\r\n    }\r\n    else if (command === 'addcourse_n') {\r\n        const n_courses = Number( tokens.shift() );\r\n        if (isNaN(n_courses) || n_courses < 0)\r\n            return window.alert('addcourse_n must be followed by an integer greater than 0!');\r\n\r\n        let courseID = stateProxy.meta.nextCourseID;\r\n        for (let i = courseID; i < courseID + n_courses; ++i) {\r\n            const res = addCourseCommandHandler(tokens, courseID+i);\r\n            if (res.error)\r\n                return window.alert(res.error);\r\n            \r\n            stateProxy[courseID + i] = res.payload;\r\n            stateProxy.meta.nextCourseID++;\r\n        }\r\n        window.alert(\"Courses successfully added.\");\r\n    }\r\n    else\r\n        window.alert(`Unidentified command ${command}`);\r\n}\r\n\r\n\r\n\r\n//=======================================\r\n// Thunk\r\n//=======================================\r\nconst uploadStateSaveFile = createAsyncThunk(\r\n    'courses/uploadStateSaveFile',\r\n    (arg)=> new Promise((resolve, reject)=> {\r\n        // Simulate a click from <input type='file'>\r\n        const pseudoUploader = document.createElement('input');\r\n        pseudoUploader.setAttribute('type', 'file');\r\n        pseudoUploader.setAttribute('accept', '.json');\r\n\r\n        pseudoUploader.onchange = ()=> {\r\n            const file = pseudoUploader.files[0];\r\n            // Uploaded a non-json file or some other problems that the file is not registered.\r\n            if (!file || file.type !== 'application/json')\r\n                return reject(\"Unable to read save file. Make sure you uploaded the very same save file in .json format\");\r\n\r\n            // Read as text and parse to JSON\r\n            const fr = new FileReader();\r\n            fr.onload = ()=> {\r\n                const loadedState = JSON.parse(fr.result);\r\n\r\n                // Something is wrong with this json. We do not perform 100% check against schema, but this is least \r\n                // we could do.\r\n                if (!loadedState || !loadedState.meta)\r\n                    return reject(\"Corrupted/Incorrect save file. Failed to read save file\");\r\n                \r\n                // Application version mismatch. Warn\r\n                if (loadedState.meta.app_version !== APP_VERSION) \r\n                    console.warn(\"Saved data is from older version of application! Old version: \",\r\n                                window.localStorage.getItem('app_version'));\r\n                \r\n                // Resolve the promise with loadedState\r\n                resolve(loadedState);\r\n            }\r\n            \r\n            fr.readAsText(file);\r\n        };\r\n        pseudoUploader.click();\r\n    })\r\n);\r\n\r\n\r\n\r\n//=======================================\r\n// Slice\r\n//=======================================\r\nconst courseSlice = createSlice({\r\n    name: 'courses',\r\n\r\n    /** @type State */\r\n    initialState: {\r\n        meta: {\r\n            nextCourseID: 0,\r\n            app_version: APP_VERSION,\r\n            currentSelectedCourse: null\r\n        },\r\n    },\r\n\r\n    reducers: {\r\n        setCurrentSelectedCourse: (state, action)=> {\r\n            const { courseID } = action.payload;\r\n            state.meta.currentSelectedCourse = courseID;\r\n        },\r\n        addCourse: (state)=> {\r\n            const newID = state.meta.nextCourseID++;\r\n            state[newID] = generateEmptyCourse(newID);\r\n            state.meta.currentSelectedCourse = newID;\r\n        },\r\n        removeCourse: (state, action)=> {\r\n            const { courseID } = action.payload;\r\n            delete state[courseID];\r\n            state.meta.currentSelectedCourse = null;\r\n        },\r\n        changeCourseName: (state, action)=> {\r\n            const { courseID, name } = action.payload;\r\n            state[courseID].name = name;\r\n        },\r\n        changeCourseCode: (state, action)=> {\r\n            const { courseID, code } = action.payload;\r\n            state[courseID].code = code;\r\n        },\r\n        addSection: (state, action)=> {\r\n            const { courseID } = action.payload;\r\n            const newID = state[courseID].meta.nextSectionID++;\r\n            state[courseID].sections[newID] = generateEmptySection(newID);\r\n        },\r\n        removeSection: (state, action)=> {\r\n            const { courseID, sectionID } = action.payload;\r\n            delete state[courseID].sections[sectionID];\r\n        },\r\n        changeSection: (state, action)=> {\r\n            const { courseID, sectionID, section } = action.payload;\r\n            state[courseID].sections[sectionID].section = section;\r\n        },\r\n        changeLecturer: (state, action)=> {\r\n            const { courseID, sectionID, lecturer } = action.payload;\r\n            state[courseID].sections[sectionID].lecturer = lecturer;\r\n        },\r\n        addTime: (state, action)=> {\r\n            const { courseID, sectionID } = action.payload;\r\n            const newID = state[courseID].sections[sectionID].meta.nextTimeID++;\r\n            state[courseID].sections[sectionID].times[newID] = generateEmptyTime(newID);\r\n        },\r\n        removeTime: (state, action)=> {\r\n            const { courseID, sectionID, timeID } = action.payload;\r\n            delete state[courseID].sections[sectionID].times[timeID];\r\n        },\r\n        changeDayOfWeek: (state, action)=> {\r\n            const { courseID, sectionID, timeID, dayOfWeek } = action.payload;\r\n            state[courseID].sections[sectionID].times[timeID].dayOfWeek = Number(dayOfWeek);\r\n        },\r\n        changeBeginTime: (state, action)=> {\r\n            const { courseID, sectionID, timeID, beginTime } = action.payload;\r\n            const time = state[courseID].sections[sectionID].times[timeID];\r\n            time.beginTime = Number(beginTime);\r\n            time.endTime = Math.max( Number(beginTime) + 1, time.endTime );\r\n        },\r\n        changeEndTime: (state, action)=> {\r\n            const { courseID, sectionID, timeID, endTime } = action.payload;\r\n            state[courseID].sections[sectionID].times[timeID].endTime = Number(endTime);\r\n        },\r\n\r\n\r\n        // Data Related Operations\r\n        saveDataIntoLocalStorage: (state)=> {\r\n            try {\r\n                window.localStorage.setItem('app_version', state.meta.app_version);\r\n                window.localStorage.setItem('saved_state', JSON.stringify(state) );\r\n                window.alert('Successfully saved state to local storage');\r\n            } catch (err) {\r\n                window.alert('Error while saving to local storage. See console for more info');\r\n                console.error(err);\r\n            }\r\n        },\r\n        loadDataFromLocalStorage: (state)=> {\r\n            try {\r\n                if (window.localStorage.getItem('saved_state') === null)\r\n                    throw new Error('no-save');\r\n\r\n                if (window.localStorage.getItem('app_version') !== APP_VERSION)\r\n                    console.warn(\"Saved data is from older version of application! Old version: \",\r\n                                  window.localStorage.getItem('app_version'));\r\n                                \r\n                window.alert('Successfully loaded previous state from local storage');\r\n                return JSON.parse(window.localStorage.getItem('saved_state'));\r\n            } catch (err) {\r\n                if (err.message === 'no-save') {\r\n                    window.alert('No previous save file found');\r\n                } else {\r\n                    window.alert('Error while saving to local storage. See console for more info');\r\n                }\r\n                console.error(err);\r\n            }\r\n        },\r\n        downloadStateSaveFile: (state)=> {\r\n            downloadJSONFromObject(state, 'save.json');\r\n        },\r\n        downloadCleanData: (state)=> {\r\n            const stateCopy = obtainStateWithoutMeta(state);\r\n            downloadJSONFromObject(stateCopy, 'courses.json');\r\n        },\r\n\r\n    \r\n        // Commands\r\n        executeCommand: (state, action)=> {\r\n            parseCommand(action.payload, state);\r\n        },\r\n\r\n    },\r\n\r\n    // Extra reducers from Async thunk\r\n    extraReducers: (builder)=> {\r\n        builder.addCase(uploadStateSaveFile.fulfilled, (state, action)=> {\r\n            window.alert('Successfully loaded state from file');\r\n            return action.payload;\r\n        });\r\n        builder.addCase(uploadStateSaveFile.rejected, (state, action)=> {\r\n            window.alert(action.error.message);\r\n        });\r\n    }\r\n});\r\n\r\nexport const courseActions = { ...courseSlice.actions, uploadStateSaveFile };\r\nexport default courseSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { courseActions } from '../redux/courseSlice';\r\n\r\nfunction Sidelist(props) {\r\n\r\n    const { isMobileSideListOpen } = props;\r\n    const dispatch = useDispatch();\r\n    const courses = useSelector((state)=> state.courses);\r\n\r\n    const courseListJSX = [];\r\n    for (let key in courses) {\r\n        if (isNaN(key)) continue;\r\n\r\n        const course = courses[key];\r\n        courseListJSX.push(\r\n            <li className={`sidelist--item ${course.id === courses.meta.currentSelectedCourse? 'sidelist--item--selected': ''}`} \r\n                key={course.id} \r\n                onClick={()=> dispatch(courseActions.setCurrentSelectedCourse({ courseID: course.id })) }>\r\n                    <p className='sidelist--name'>{ course.name }</p>\r\n                    <p className='sidelist--code'>{ course.code }</p>\r\n            </li>  \r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <div className={`sidelist ${isMobileSideListOpen? 'show': ''}`}>\r\n        <ul className='sidelist-list' >\r\n            { courseListJSX }\r\n        </ul>\r\n        \r\n        <button className='sidelist--btn sidelist--add' aria-label='Add blank course' title='Add blank course' \r\n            onClick={()=> dispatch(courseActions.addCourse())}>\r\n                +\r\n        </button>\r\n        <a className='sidelist--btn sidelist--github' href='https://github.com/AdmiJW/Course-JSON-Generator' target='_blank' rel='noreferrer noopener'\r\n            aria-label='Github Page' title='Github Page'>\r\n                <i className=\"fab fa-github-alt\"></i>\r\n        </a>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Sidelist;","import { memo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { courseActions } from '../redux/courseSlice';\r\n\r\nfunction Timeslot(props) {\r\n    const { courseID, sectionID, time } = props;\r\n    const { id: timeID, dayOfWeek, beginTime, endTime } = time;\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n    <li className='time'>\r\n\r\n        <select className='time--dayofweek' value={dayOfWeek}\r\n            onChange={(e)=> dispatch(courseActions.changeDayOfWeek({ courseID, sectionID, timeID, dayOfWeek: e.target.value }))}>\r\n                <option value='0'>Sunday</option>\r\n                <option value='1'>Monday</option>\r\n                <option value='2'>Tuesday</option>\r\n                <option value='3'>Wednesday</option>\r\n                <option value='4'>Thursday</option>\r\n                <option value='5'>Friday</option>\r\n                <option value='6'>Saturday</option>\r\n        </select>\r\n\r\n        <select className='time--beginTime' value={beginTime}\r\n            onChange={(e)=> dispatch(courseActions.changeBeginTime({ courseID, sectionID, timeID, beginTime: e.target.value }))}>\r\n                <option value='8'>(02) 8.00 AM</option>\r\n                <option value='9'>(03) 9.00 AM</option>\r\n                <option value='10'>(04) 10.00 AM</option>\r\n                <option value='11'>(05) 11.00 AM</option>\r\n                <option value='12'>(06) 12.00 PM</option>\r\n                <option value='13'>(07) 1.00 PM</option>\r\n                <option value='14'>(08) 2.00 PM</option>\r\n                <option value='15'>(09) 3.00 PM</option>\r\n                <option value='16'>(10) 4.00 PM</option>\r\n                <option value='17'>(11) 5.00 PM</option>\r\n        </select>\r\n\r\n        <p>To</p>\r\n\r\n        <select className='time--endTime' value={endTime}\r\n            onChange={(e)=> dispatch(courseActions.changeEndTime({ courseID, sectionID, timeID, endTime: e.target.value }))}>\r\n                <option value='9' disabled={ beginTime > 9 }>(03) 9.00 AM</option>\r\n                <option value='10' disabled={ beginTime > 10 }>(04) 10.00 AM</option>\r\n                <option value='11' disabled={ beginTime > 11 }>(05) 11.00 AM</option>\r\n                <option value='12' disabled={ beginTime > 12 }>(06) 12.00 PM</option>\r\n                <option value='13' disabled={ beginTime > 13 }>(07) 1.00 PM</option>\r\n                <option value='14' disabled={ beginTime > 14 }>(08) 2.00 PM</option>\r\n                <option value='15' disabled={ beginTime > 15 }>(09) 3.00 PM</option>\r\n                <option value='16' disabled={ beginTime > 16 }>(10) 4.00 PM</option>\r\n                <option value='17' disabled={ beginTime > 17 }>(11) 5.00 PM</option>\r\n                <option value='18' disabled={ beginTime > 18 }>(11) 6.00 PM</option>\r\n        </select>\r\n\r\n        <button type='button' className='time--delete'\r\n            onClick={(e)=> dispatch(courseActions.removeTime({ courseID, sectionID, timeID }))}>\r\n                Remove\r\n        </button>\r\n    </li>\r\n    );  \r\n}\r\n\r\nexport default memo(Timeslot);","import { memo } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { courseActions } from \"../redux/courseSlice\";\r\n\r\n\r\nimport Timeslot from './Timeslot';\r\n\r\n\r\nfunction Section(props) {\r\n\r\n    const { courseID, section: sectionObj } = props;\r\n    const { id: sectionID, section, lecturer, times } = sectionObj;\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const timeslotListJSX = [];\r\n    for (let key in times) {\r\n        if (isNaN(key)) continue;\r\n\r\n        const time = times[key];\r\n        timeslotListJSX.push(\r\n            <Timeslot key={time.id} courseID={courseID} sectionID={sectionID} time={time} />\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n    <li className='section'>\r\n\r\n        <div className='section--meta'>\r\n            <input type='text' className='section--section' value={ section } placeholder='Section'\r\n                onChange={(e)=> dispatch(courseActions.changeSection({ courseID, sectionID, section: e.target.value }))} />\r\n            <input type='text' className='section--lecturer' value={ lecturer } placeholder='Lecturer Name'\r\n                onChange={(e)=> dispatch(courseActions.changeLecturer({ courseID, sectionID, section: e.target.value }))} />\r\n        </div>\r\n\r\n        <div className='section--btngrp'>\r\n            <button type='button' className='section--addtime'\r\n                onClick={(e)=> dispatch(courseActions.addTime({ courseID, sectionID }))} >\r\n                    Add Time\r\n            </button>\r\n            <button type='button' className='section--delete'\r\n                onClick={(e)=> dispatch(courseActions.removeSection({ courseID, sectionID }))} >\r\n                    Delete Section\r\n            </button>\r\n        </div>\r\n\r\n        <ul className='section--times'>\r\n            { timeslotListJSX }\r\n        </ul>\r\n    </li>\r\n    );\r\n}\r\n\r\nexport default memo(Section);","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { courseActions } from '../redux/courseSlice';\r\n\r\n/** @typedef {import('../redux/courseSlice').State} State */\r\n\r\nimport Section from './Section';\r\n\r\n\r\nfunction CourseEditor() {\r\n    /** @type State */\r\n    const courses = useSelector((state)=> state.courses);\r\n    const dispatch = useDispatch();\r\n    const [ deleteConfirmation, setDeleteConfirmation ] = useState(false);\r\n\r\n\r\n    // No selection - Return empty section\r\n    if (courses.meta.currentSelectedCourse === null) {\r\n        return <section className='editor'></section>;\r\n    }\r\n\r\n    const courseID = courses.meta.currentSelectedCourse;\r\n    const course = courses[courseID];\r\n    const { name, code, sections } = course;\r\n\r\n    \r\n    const sectionsJSX = [];\r\n    for (let key in sections) {\r\n        if (isNaN(key)) continue;\r\n\r\n        const section = sections[key];\r\n        sectionsJSX.push(\r\n            <Section key={section.id} courseID={courseID} section={section} />\r\n        );\r\n    }\r\n\r\n    const onDelete = ()=> {\r\n        if (deleteConfirmation === false) {\r\n            setDeleteConfirmation(true);\r\n            setTimeout(() => {\r\n                setDeleteConfirmation(false);\r\n            }, 3000);\r\n        }\r\n        else {\r\n            dispatch(courseActions.removeCourse({ courseID }));\r\n            setDeleteConfirmation(false);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n    <section className='editor'>\r\n        {/* Course Name & Course Code */}\r\n        <input type='text' className='editor__coursename' value={name} placeholder='Course Name'\r\n            onChange={(e)=> dispatch(courseActions.changeCourseName({ courseID, name: e.target.value})) } />\r\n        <input type='text' className='editor__coursecode' value={code} placeholder='Course Code'\r\n            onChange={(e)=> dispatch(courseActions.changeCourseCode({ courseID, code: e.target.value})) } />\r\n        \r\n        {/* Button Group */}\r\n        <div className='editor__btngrp'>\r\n            <button type='button' className='editor__addsection'\r\n                onClick={()=> dispatch(courseActions.addSection({ courseID })) } >\r\n                    Add Section\r\n            </button>\r\n            <button type='button' className={`editor__removecourse ${deleteConfirmation? 'warn': ''}`}\r\n                onClick={ onDelete } >\r\n                    {`${deleteConfirmation? 'Confirm Delete?': 'Delete'}`}\r\n            </button>\r\n        </div>\r\n\r\n        {/* Sections */}\r\n        <ul className='sections'>\r\n            { sectionsJSX }\r\n        </ul>\r\n    </section>\r\n    );\r\n}\r\n\r\nexport default CourseEditor;","import { Fragment, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { courseActions } from \"./redux/courseSlice\";\n\nimport Sidelist from \"./components/Sidelist\";\nimport CourseEditor from \"./components/CourseEditor\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n    const [isMobileSideListOpen, setIsMobileSideListOpen] = useState(false);\n    const [commandField, setCommandField] = useState('');\n\n\n    return (\n    <Fragment>\n    <main>\n        <Sidelist isMobileSideListOpen={isMobileSideListOpen} />\n        <CourseEditor />\n    </main>\n\n\n    <div className='controls'>\n        <input type='text' className='controls--input controls--command' aria-label='Field to type in command' title='Field to type in command'\n            placeholder='Enter command here...' value={commandField} \n            onChange={(e)=> setCommandField(e.target.value) } \n            onKeyDown={(e)=> {\n                if (e.key === 'Enter') dispatch(courseActions.executeCommand(commandField));\n            }} />\n\n        <button type='button' className='controls--btn controls--save' aria-label='Save into Local Storage' title='Save into Local Storage'\n            onClick={()=> dispatch(courseActions.saveDataIntoLocalStorage())} >\n                <i className=\"far fa-save\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--load' aria-label='Load from Local Storage' title='Load from Local Storage'\n            onClick={()=> dispatch(courseActions.loadDataFromLocalStorage())} >\n                <i className=\"fas fa-database\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--savefile' aria-label='Load state from file' title='Load state from file'\n            onClick={()=> dispatch(courseActions.uploadStateSaveFile()) } >\n                <i className=\"fas fa-file-import\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--loadfile' aria-label='Save state as file' title='Save state as file'\n            onClick={()=> dispatch(courseActions.downloadStateSaveFile()) } >\n                <i className=\"fas fa-file-export\"></i>\n        </button>\n\n        <button type='button' className='controls--btn controls--download' aria-label='Download' title='Download'\n            onClick={()=> dispatch(courseActions.downloadCleanData())}>\n                <i className=\"fas fa-file-download\"></i>\n        </button>\n        <button type='button' className='controls--btn controls--mobileview' aria-label='List' title='List' \n            onClick={()=> setIsMobileSideListOpen(!isMobileSideListOpen)} >\n                <i className=\"fas fa-list-ul\"></i>\n        </button>\n    </div>\n    </Fragment>\n\n    );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport CourseSliceReducer from \"./courseSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        courses: CourseSliceReducer\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './styles/main.css';\n\n\nReactDOM.render(\n    <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}